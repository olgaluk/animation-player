{"version":3,"sources":["components/Header.jsx","actions/frameActions.js","components/Tool.jsx","components/frames/Frame.jsx","components/CanvasPlace.jsx","components/frames/Frames.jsx","components/preview/Preview.jsx","App.js","serviceWorker.js","reducers/frames.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","changeNumber","number","type","Tool","this","props","changeTool","changeColor","currentColor","tool","changePrevColor","changeCurrentColor","prevColor","id","onClick","handlePaintBucketChange","bind","handleChooseColorChange","handleCurrentColors","handlePrevColors","handleRedColors","handleBlueColors","handleGreenColors","handleGreyColors","connect","state","Object","objectSpread","dispatch","color","Frame","index","dataIndex","changeNumberSquare","_this","numberFrame","frameState","frames","length","Math","sqrt","handleFrameChange","Array","from","map","field","i","key","pow","toString","item","handleSquareChange","CanvasPlace","changeColorFrame","handleFramesChange","components_frames_Frame","Frames","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fieldsCount","setState","addFrame","e","deleteFrame","deleteBorder","changeBorder","stopPropagation","copyFrame","_this2","framesBorder","getFrameBorder","data-index","duplicateFrame","numberDelete","Preview","counter","countFrame","interval","fps","setTimeout","requestAnimationFrame","getNextFrame","target","value","intervalId","clearInterval","openFullscreen","ref","closeFullscreen","document","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","_this3","fields","push","node","min","step","max","fsp","onChange","handleSpeedChange","handleOpenClick","handleCloseClick","App","components_Header","components_Tool","components_frames_Frames","components_CanvasPlace","components_preview_Preview","Boolean","window","location","hostname","match","initialState","numberSquare","store","createStore","arguments","undefined","action","frame","toConsumableArray","concat","frames1","indexState","newFrames","filter","newBorder","pop","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6164c29.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <header>\n        <i className=\"fas fa-bars\"></i>\n        <h1>CodeJam - Animation Player</h1>\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","export const changeNumber = (number) => ({\n  type: 'CHANGE_NUMBER',\n  number\n})\n\nexport const changeNumberSquare = (number) => ({\n  type: 'CHANGE_NUMBERSQUARE',\n  number\n})\n\nexport const changeColor = (color) => ({\n  type: 'CHANGE_COLOR',\n  color\n})\n\nexport const addFrame = () => ({\n  type: 'ADD_FRAME',\n})\n\nexport const changeColorFrame = () => ({\n  type: 'CHANGE_COLORFRAME',\n})\n\nexport const changeTool = (tool) => ({\n  type: 'CHANGE_TOOL',\n  tool\n})\n\nexport const deleteFrame = (numberDelete) => ({\n  type: 'DELETE_FRAME',\n  numberDelete\n})\n\nexport const copyFrame = (numberFrame) => ({\n  type: 'COPY_FRAME',\n  numberFrame\n})\n\nexport const changeCurrentColor = (color) => ({\n  type: 'CHANGE_CURRENTCOLOR',\n  color\n})\n\nexport const changePrevColor = (color) => ({\n  type: 'CHANGE_PREVCOLOR',\n  color\n})\n\nexport const changeBorder = (index) => ({\n  type: 'CHANGE_BORDER',\n  index\n})\n\nexport const deleteBorder = () => ({\n  type: 'DELETE_BORDER',\n})\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport {\n  changeColor,\n  changeTool,\n  changeCurrentColor,\n  changePrevColor,\n} from '../actions/frameActions';\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeColor: (color) => dispatch(changeColor(color)),\n  changeTool: (tool) => dispatch(changeTool(tool)),\n  changeCurrentColor: (color) => dispatch(changeCurrentColor(color)),\n  changePrevColor: (color) => dispatch(changePrevColor(color)),\n});\n\nclass Tool extends Component {\n\n  handlePaintBucketChange() {\n    this.props.changeTool('PaintBucket');\n    this.props.changeColor(this.props.currentColor);\n  }\n\n  handleChooseColorChange() {\n    this.props.changeTool('ChooseColor');\n  }\n\n  handleCurrentColors() {\n    if (this.props.tool === 'ChooseColor') {\n      this.props.changePrevColor(this.props.currentColor);\n    }\n  }\n\n  handlePrevColors() {\n    if (this.props.tool === 'ChooseColor') {\n      const currentColor = this.props.currentColor;\n      this.props.changeCurrentColor(this.props.prevColor);\n      this.props.changePrevColor(currentColor);\n    }\n  }\n\n  handleRedColors() {\n    if (this.props.tool === 'ChooseColor') {\n      this.props.changePrevColor(this.props.currentColor);\n      this.props.changeCurrentColor('red');\n    }\n  }\n\n  handleBlueColors() {\n    if (this.props.tool === 'ChooseColor') {\n      this.props.changePrevColor(this.props.currentColor);\n      this.props.changeCurrentColor('blue');\n    }\n  }\n\n  handleGreenColors() {\n    if (this.props.tool === 'ChooseColor') {\n      this.props.changePrevColor(this.props.currentColor);\n      this.props.changeCurrentColor('green');\n    }\n  }\n\n  handleGreyColors() {\n    if (this.props.tool === 'ChooseColor') {\n      this.props.changePrevColor(this.props.currentColor);\n      this.props.changeCurrentColor('grey');\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"tool\">\n        <div className=\"palette\">\n          <p id=\"paint-bucket\" onClick={this.handlePaintBucketChange.bind(this)}>\n            <i className=\"fas fa-fill-drip\"></i>\n            <span>Paint bucket</span>\n          </p>\n          <p id=\"choose-color\" className=\"choose-color\" onClick={this.handleChooseColorChange.bind(this)}>\n            <i className=\"fas fa-eye-dropper\"></i>\n            <span>Choose color</span>\n          </p>\n          <div className=\"line\"></div>\n          <p id=\"move\">\n            <i className=\"fas fa-arrows-alt\"></i>\n            <span>Move</span>\n          </p>\n          <p id=\"transform\">\n            <i className=\"fas fa-exchange-alt\"></i>\n            <span>Transform</span>\n          </p>\n        </div>\n        <div className=\"colors-part\">\n          <ul>\n            <li onClick={this.handleCurrentColors.bind(this)}>\n              <div id=\"current\" className={this.props.currentColor}></div>\n              <p>Current color</p>\n            </li>\n            <li onClick={this.handlePrevColors.bind(this)}>\n              <div id=\"prev-color\" className={this.props.prevColor}></div>\n              <p>Prev color</p>\n            </li>\n            <div className=\"line\"></div>\n            <li onClick={this.handleRedColors.bind(this)}>\n              <div className=\"red\"></div>\n              <p>red</p>\n            </li>\n            <li onClick={this.handleBlueColors.bind(this)}>\n              <div className=\"blue\"></div>\n              <p>blue</p>\n            </li>\n            <li onClick={this.handleGreenColors.bind(this)}>\n              <div className=\"green\"></div>\n              <p>green</p>\n            </li>\n            <li onClick={this.handleGreyColors.bind(this)}>\n              <div className=\"grey\"></div>\n              <p>grey</p>\n            </li>\n          </ul>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tool);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport './Frame.css';\n\nimport { changeNumber, changeNumberSquare } from '../../actions/frameActions';\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeNumber: (number) => dispatch(changeNumber(number)),\n  changeNumberSquare: (number) => dispatch(changeNumberSquare(number))\n});\n\nclass Frame extends Component {\n  handleFrameChange() {\n    this.props.changeNumber(this.props.index);\n  }\n\n  handleSquareChange(dataIndex) {\n    this.props.changeNumberSquare(dataIndex);\n  }\n\n  render() {\n    const numberFrame = this.props.index;\n    const frameState = this.props.frames[numberFrame];\n    const length = Math.sqrt(frameState.length);\n    return (\n      <section onClick={this.handleFrameChange.bind(this)} className=\"frame\">\n        <div className=\"frame-area\">\n          {Array.from({ length }, () => null).map((field, i) => (\n            <div key={i.toString() ** (i + 1)}>\n              {Array.from({ length }, () => null).map((item, index) => (\n                <div key={i.toString() + index} className={frameState[i * length + index]} onClick={this.handleSquareChange.bind(this, i * length + index)}></div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Frame);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Frame from '../components/frames/Frame';\n\nimport { changeColorFrame } from '../actions/frameActions';\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeColorFrame: () => dispatch(changeColorFrame())\n});\n\nclass CanvasPlace extends Component {\n\n  handleFramesChange() {\n    if (this.props.tool === 'PaintBucket') {\n      this.props.changeColorFrame();\n    }\n  }\n\n  render() {\n    return (\n      <section onClick={this.handleFramesChange.bind(this)} className=\"canvas_place\">\n        <Frame index={this.props.number} key={this.props.number} />\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasPlace);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport './Frames.css';\n\nimport Frame from './Frame';\n\nimport { addFrame, deleteFrame, changeNumber, copyFrame, changeBorder, deleteBorder } from '../../actions/frameActions';\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addFrame: () => dispatch(addFrame()),\n  deleteFrame: (numberDelete) => dispatch(deleteFrame(numberDelete)),\n  changeNumber: (number) => dispatch(changeNumber(number)),\n  copyFrame: (numberFrame) => dispatch(copyFrame(numberFrame)),\n  changeBorder: (index) => dispatch(changeBorder(index)),\n  deleteBorder: () => dispatch(deleteBorder()),\n});\n\nclass Frames extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fieldsCount: 1\n    };\n  }\n\n  addFrame() {\n    this.setState({ fieldsCount: this.state.fieldsCount + 1 });\n    this.props.addFrame();\n  }\n\n  deleteFrame(dataIndex, e) {\n    if (this.state.fieldsCount > 1) {\n      this.props.deleteFrame(dataIndex);\n      this.props.changeNumber(0);\n      this.setState({ fieldsCount: this.state.fieldsCount - 1 });\n      this.props.deleteBorder();\n      this.props.changeBorder(0);\n      e.stopPropagation();\n    }\n  }\n\n  duplicateFrame(dataIndex, e) {\n    this.setState({ fieldsCount: this.state.fieldsCount + 1 });\n    this.props.copyFrame(dataIndex);\n    e.stopPropagation();\n  }\n\n  getFrameBorder(index) {\n    this.props.changeBorder(index);\n  }\n\n  render() {\n    return (\n      <section className=\"frames\">\n        <div>\n          {Array.from({ length: this.state.fieldsCount }, () => null).map((field, i) => (\n            <div key={i.toString() + 5} className={this.props.framesBorder[i]} onClick={this.getFrameBorder.bind(this, i)}>\n              <div key={i.toString() + 7} className=\"frame_number\">{i}</div>\n              <div data-index={i} key={i.toString() + 8} className=\"frame_delete\" onClick={this.deleteFrame.bind(this, i)}><i className=\"far fa-trash-alt\"></i></div>\n              <Frame index={i} key={i.toString()} />\n              <div data-index={i} key={i.toString() + 6} className=\"frame_duplicate\" onClick={this.duplicateFrame.bind(this, i)}><i className=\"far fa-copy\"></i></div>\n            </div>\n          ))}\n        </div>\n        <div>\n          <button className=\"frames_button\" onClick={this.addFrame.bind(this)} type=\"button\"><i className=\"fas fa-plus\"></i><p>Add new frame</p></button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Frames)\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport './Preview.css';\n\nimport Frame from '../frames/Frame';\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      countFrame: 0,\n      interval: null,\n      fps: 5\n    };\n  }\n\n  getNextFrame() {\n    this.setState({ countFrame: this.props.frames.length - 1 });\n    if (this.state.counter >= this.state.countFrame) {\n      this.setState({ counter: 0 });\n    } else {\n      this.setState({ counter: this.state.counter + 1 });\n    }\n    setTimeout(() => {\n      requestAnimationFrame(this.getNextFrame.bind(this));\n    }, 1000 / this.state.fps);\n  }\n\n  handleSpeedChange(e) {\n    this.setState({\n      fps: +e.target.value\n    })\n  }\n\n  componentDidMount() {\n    const intervalId = requestAnimationFrame(this.getNextFrame.bind(this));\n    this.setState({\n      interval: intervalId,\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  handleOpenClick() {\n    this.openFullscreen(this.ref);\n  }\n\n  handleCloseClick() {\n    this.closeFullscreen();\n  }\n\n  closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n\n  openFullscreen(elem) {\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n      elem.msRequestFullscreen();\n    }\n  }\n\n  render() {\n    let fields = [];\n\n    for (let i = 0; i < this.props.frames.length; i++) {\n      fields.push(<Frame index={i} key={i.toString()} />);\n    };\n\n    return (\n      <section className=\"preview\" ref={(node) => this.ref = node}>\n        <div className=\"preview-area\" >\n          {fields[this.state.counter]}\n        </div>\n        <div>\n          <input type=\"range\" min=\"1\" step=\"1\" max=\"24\" id=\"fps\" value={this.state.fsp} onChange={this.handleSpeedChange.bind(this)}></input> {this.state.fps}\n        </div>\n        <h3>FPS</h3>\n        <button onClick={this.handleOpenClick.bind(this)} type=\"button\">Open Fullscreen</button>\n        <button onClick={this.handleCloseClick.bind(this)} type=\"button\">Close Fullscreen</button>\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preview);\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Tool from './components/Tool';\nimport CanvasPlace from './components/CanvasPlace';\nimport Frames from './components/frames/Frames';\nimport Preview from './components/preview/Preview';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main>\n          <Tool />\n          <Frames />\n          <CanvasPlace />\n          <Preview />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  number: 0,\n  numberSquare: null,\n  color: 'grey-light',\n  currentColor: 'red',\n  prevColor: 'grey-light',\n  tool: '',\n  framesBorder: [\"frame_border\"],\n  frames: [\n    [\n      'grey-light',\n      'grey-light',\n      'grey-light',\n      'grey-light',\n      'grey-light',\n      'grey-light',\n      'grey-light',\n      'grey-light',\n      'grey-light',\n    ]\n  ]\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NUMBER':\n      return {\n        ...state,\n        number: action.number\n      }\n\n    case 'CHANGE_NUMBERSQUARE':\n      return {\n        ...state,\n        numberSquare: action.number\n      }\n\n    case 'CHANGE_COLOR':\n      return {\n        ...state,\n        color: action.color\n      }\n\n    case 'CHANGE_CURRENTCOLOR':\n      return {\n        ...state,\n        currentColor: action.color\n      }\n\n    case 'CHANGE_PREVCOLOR':\n      return {\n        ...state,\n        prevColor: action.color\n      }\n\n    case 'ADD_FRAME':\n      const frame = [...state.frames];\n      frame.push(Array.from({ length: 9 }, () => 'grey-light'));\n      return {\n        ...state,\n        frames: frame,\n        framesBorder: [...state.framesBorder, \"frame_border-none\"],\n      }\n\n    case 'CHANGE_COLORFRAME':\n      const frames1 = state.frames.map((item, indexState) => {\n        if (indexState === state.number) {\n          item = item.map((elem, index) => {\n            if (index === state.numberSquare) {\n              elem = state.color;\n            }\n            return elem;\n          });\n        }\n        return item;\n      });\n      return {\n        ...state,\n        frames: frames1\n      }\n\n    case 'DELETE_FRAME':\n      const newFrames = state.frames.filter((item, indexState) =>\n        indexState !== action.numberDelete\n      );\n      return {\n        ...state,\n        frames: newFrames,\n      }\n\n    case 'DELETE_BORDER':\n      const newBorder = state.framesBorder;\n      newBorder.pop();\n      return {\n        ...state,\n        framesBorder: newBorder,\n      }\n\n    case 'CHANGE_TOOL':\n      return {\n        ...state,\n        tool: action.tool\n      }\n\n    case 'COPY_FRAME':\n      return {\n        ...state,\n        frames: [...state.frames, state.frames[action.numberFrame]],\n        framesBorder: [...state.framesBorder, \"frame_border-none\"],\n      }\n\n    case 'CHANGE_BORDER':\n      return {\n        ...state,\n        framesBorder: state.framesBorder.map((item, indexState) => {\n          if (indexState === action.index) {\n            return \"frame_border\";\n          }\n          return \"frame_border-none\";\n        })\n      }\n\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport frames from './reducers/frames'\n\nconst store = createStore(frames);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}